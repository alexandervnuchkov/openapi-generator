openapi: 3.0.3
servers:
  - url: https://petstore.swagger.io/v2
info:
  description: 'Это пример сервера Petstore. Вы можете узнать больше о Swagger на [http://swagger.io](http://swagger.io) или на [irc.freenode.net, #swagger](http://swagger.io/irc/). Для этого примера вы можете использовать api key `special-key` для тестирования фильтров авторизации.'
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  # Условия использования
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: pet
    description: Всё о ваших питомцах
    externalDocs:
      description: Узнать больше
      url: 'http://swagger.io'
  - name: store
    description: Доступ к заказам Petstore
  - name: user
    description: Операции с пользователями
    externalDocs:
      description: Узнать больше о нашем магазине
      url: 'http://swagger.io'
paths:
  /pet:
    post:
      tags:
        - pet
      summary: Добавить нового питомца в магазин
      description: 'Добавляет нового питомца в систему магазина. Требует полных данных о питомце.'
      operationId: addPet
      x-code-samples:
        $ref: ./code-samples/post-pet.yaml
      responses:
        '200':
          description: Успешное добавление питомца
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
              example:
                id: 10
                name: "doggie"
                status: "available"
        '405':
          description: Некорректные входные данные
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
    put:
      tags:
        - pet
      summary: Обновить существующего питомца
      description: 'Обновляет данные существующего питомца. Требует полного объекта питомца.'
      operationId: updatePet
      x-code-samples:
        $ref: ./code-samples/put-pet.yaml
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Некорректный ID
        '404':
          description: Питомец не найден
        '405':
          description: Ошибка валидации
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
  /pet/findByStatus:
    get:
      tags:
        - pet
      summary: Найти питомцев по статусу
      description: 'Возвращает список питомцев по указанным статусам. Допустимые статусы: `available`, `pending`, `sold`.'
      operationId: findPetsByStatus
      x-code-samples:
        $ref: ./code-samples/get-pet-findByStatus.yaml
      parameters:
        - name: status
          in: query
          description: Статусы для фильтрации (разделяются запятыми)
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - pending
                - sold
              default: available
      responses:
        '200':
          description: Успешная операция
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
              example:
                - id: 1
                  name: "Cat 1"
                  status: "available"
                - id: 2
                  name: "Dog 1"
                  status: "pending"
        '400':
          description: Некорректное значение статуса
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByTags:
    get:
      tags:
        - pet
      summary: Найти питомцев по тегам
      description: 'Возвращает список питомцев по указанным тегам. Теги разделяются запятыми.'
      operationId: findPetsByTags
      x-code-samples:
        $ref: ./code-samples/get-pet-findByTags.yaml
      parameters:
        - name: tags
          in: query
          description: Теги для фильтрации (разделяются запятыми)
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Некорректное значение тега
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      deprecated: true
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Найти питомца по ID
      description: 'Возвращает данные одного питомца по его уникальному идентификатору.'
      operationId: getPetById
      x-code-samples:
        $ref: ./code-samples/get-pet-petId.yaml
      parameters:
        - name: petId
          in: path
          description: ID возвращаемого питомца
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешная операция
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Некорректный ID
        '404':
          description: Питомец не найден
      security:
        - api_key: []
    post:
      tags:
        - pet
      summary: Обновить питомца через форму
      description: 'Обновляет имя и статус питомца с помощью данных формы.'
      operationId: updatePetWithForm
      x-code-samples:
        $ref: ./code-samples/post-pet-petId.yaml
      parameters:
        - name: petId
          in: path
          description: ID обновляемого питомца
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '405':
          description: Некорректные входные данные
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the pet
                  type: string
                status:
                  description: Updated status of the pet
                  type: string
    delete:
      tags:
        - pet
      summary: Удалить питомца
      description: 'Удаляет питомца по его идентификатору. Требует аутентификации.'
      operationId: deletePet
      x-code-samples:
        $ref: ./code-samples/delete-pet-petId.yaml
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: ID удаляемого питомца
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Некорректный ID
        '404':
          description: Питомец не найден
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  '/pet/{petId}/uploadImage':
    post:
      tags:
        - pet
      summary: Загрузить изображение
      description: 'Загружает изображение для указанного питомца.'
      operationId: uploadFile
      x-code-samples:
        $ref: ./code-samples/post-pet-petId-uploadImage.yaml
      parameters:
        - name: petId
          in: path
          description: ID обновляемого питомца
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                additionalMetadata:
                  description: Дополнительные метаданные для сервера
                  type: string
                file:
                  description: Файл для загрузки
                  type: string
                  format: binary
  /store/inventory:
    get:
      tags:
        - store
      summary: Получить инвентарь по статусам
      description: 'Возвращает количество питомцев по каждому статусу (только для администраторов).'
      operationId: getInventory
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
              example:
                available: 5
                pending: 2
                sold: 10
      x-code-samples:
        $ref: ./code-samples/get-store-inventory.yaml
      security:
        - api_key: []
  /store/order:
    post:
      tags:
        - store
      summary: Создать заказ на питомца
      description: 'Размещает новый заказ на покупку питомца.'
      operationId: placeOrder
      x-code-samples:
        $ref: ./code-samples/post-store-order.yaml
      responses:
        '200':
          description: Успешная операция
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                id: 10
                petId: 198772
                quantity: 1
                shipDate: "2025-08-16T15:00:00Z"
                status: "placed"
                complete: false
        '400':
          description: Некорректный заказ
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: Заказ на покупку питомца
        required: true
  '/store/order/{orderId}':
    get:
      tags:
        - store
      summary: Найти заказ по ID
      description: 'Возвращает данные заказа по его идентификатору. Допустимые ID: от `1` до `10`.'
      operationId: getOrderById
      x-code-samples:
        $ref: ./code-samples/get-store-order-orderId.yaml
      parameters:
        - name: orderId
          in: path
          description: ID получаемого заказа
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: Успешная операция
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Некорректный ID
        '404':
          description: Заказ не найден
    delete:
      tags:
        - store
      summary: Удалить заказ по ID
      description: 'Удаляет заказ по его идентификатору. Допустимы только положительные целые числа.'
      operationId: deleteOrder
      x-code-samples:
        $ref: ./code-samples/delete-store-order-orderId.yaml
      parameters:
        - name: orderId
          in: path
          description: ID удаляемого заказа
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
        '400':
          description: Некорректный ID
        '404':
          description: Заказ не найден
externalDocs:
  description: Узнать больше о Swagger
  url: 'http://swagger.io'
components:
  responses:
    PetResponse:
      description: successful operation
      content:
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Pet'
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Pet'
    UserResponse:
      description: User response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': изменение питомцев в вашем аккаунте
            'read:pets': чтение ваших питомцев
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор заказа
          example: 10
        petId:
          type: integer
          format: int64
          description: Идентификатор заказанного питомца
          example: 198772
        quantity:
          type: integer
          format: int32
          description: Количество заказанных единиц
          example: 1
        shipDate:
          type: string
          format: date-time
          description: Дата и время отправки заказа
          example: "2025-08-16T15:00:00Z"
        status:
          type: string
          description: Статус заказа
          enum:
            - placed
            - approved
            - delivered
          example: "placed"
        complete:
          type: boolean
          default: false
          description: Флаг завершенности заказа
          example: false
      xml:
        name: Order
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор пользователя
          example: 1
        username:
          type: string
          description: Логин пользователя
          example: "john_doe"
        firstName:
          type: string
          description: Имя пользователя
          example: "John"
        lastName:
          type: string
          description: Фамилия пользователя
          example: "Doe"
        email:
          type: string
          description: Email пользователя
          example: "john@example.com"
        password:
          type: string
          description: Пароль пользователя
          example: "password123"
        phone:
          type: string
          description: Телефон пользователя
          example: "+1234567890"
        userStatus:
          type: integer
          format: int32
          description: Статус пользователя (1-активный, 0-неактивный)
          example: 1
      xml:
        name: User
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          description: Название категории
          example: "Dogs"
      xml:
        name: Category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Pet:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор питомца
          example: 1
        category:
          $ref: '#/components/schemas/Category'
          description: Категория питомца
        name:
          type: string
          example: "doggie"
          description: Имя питомца
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
          description: Ссылки на фотографии питомца
          example: ["http://example.com/photo1.jpg", "http://example.com/photo2.jpg"]
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
          description: Теги питомца
        status:
          type: string
          description: Статус питомца в магазине
          enum:
            - available
            - pending
            - sold
          example: "available"
      xml:
        name: Pet
    Inventory:
      type: object
      description: Инвентарь питомцев по статусам
      properties:
        available:
          type: integer
          format: int32
          description: Количество доступных питомцев
          example: 5
        pending:
          type: integer
          format: int32
          description: Количество ожидающих питомцев
          example: 2
        sold:
          type: integer
          format: int32
          description: Количество проданных питомцев
          example: 10
    ApiResponse:
      type: object
      description: Ответ API
      properties:
        code:
          type: integer
          format: int32
          description: Код ответа
          example: 200
        type:
          type: string
          description: Тип ответа
          example: "success"
        message:
          type: string
          description: Сообщение ответа
          example: "Operation successful"
  examples:
    Order:
      value:
        quantity: 1
        shipDate: '2018-10-19T16:46:45Z'
        status: placed
        complete: false
